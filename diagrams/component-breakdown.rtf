{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 @startuml ClassDiagram\
\
title AI Voice Interface System - Detailed Class Diagram\
\
package "Voice Interface Layer" \{\
    class VoiceInterface \{\
        +startListening()\
        +stopListening()\
        +playResponse(audio: AudioStream)\
        -audioBuffer: Buffer\
        -isActive: boolean\
    \}\
    \
    class SpeechToTextConverter \{\
        +convertToText(audio: AudioStream): string\
        +setLanguage(lang: string)\
        -apiEndpoint: string\
        -confidenceThreshold: float\
    \}\
    \
    class TextToSpeechConverter \{\
        +convertToAudio(text: string): AudioStream\
        +setVoice(voice: string)\
        -voiceModel: string\
        -speed: float\
    \}\
\}\
\
package "AI Agent Core" \{\
    class AIAgentController \{\
        +processQuery(query: string): string\
        +initialize()\
        +shutdown()\
        -sessionId: string\
        -context: Map<string, Object>\
    \}\
    \
    class PlanningModule \{\
        +analyzeQuery(query: string): QueryAnalysis\
        +createExecutionPlan(analysis: QueryAnalysis): ExecutionPlan\
        -strategies: List<PlanningStrategy>\
        -priorityRules: List<Rule>\
    \}\
    \
    class RAGRetrievalModule \{\
        +retrieveContext(query: string): List<Document>\
        +rankDocuments(docs: List<Document>): List<Document>\
        -embeddingModel: EmbeddingModel\
        -maxResults: int\
    \}\
    \
    class WorkflowGenerator \{\
        +generateWorkflow(plan: ExecutionPlan): Workflow\
        +validateWorkflow(workflow: Workflow): boolean\
        -workflowTemplates: Map<string, Template>\
        -validationRules: List<Rule>\
    \}\
    \
    class ResponseGenerator \{\
        +generateResponse(results: WorkflowResults, context: List<Document>): string\
        +formatResponse(data: Object): string\
        -responseTemplates: Map<string, Template>\
        -language: string\
    \}\
\}\
\
package "Knowledge & Execution Layer" \{\
    class RAGService \{\
        +query(searchQuery: string): List<Document>\
        +updateIndex(documents: List<Document>)\
        -vectorStore: VectorStore\
        -indexManager: IndexManager\
    \}\
    \
    class WorkflowExecutor \{\
        +executeWorkflow(workflow: Workflow): WorkflowResults\
        +executeStep(step: WorkflowStep): StepResult\
        -executionContext: ExecutionContext\
        -errorHandler: ErrorHandler\
    \}\
    \
    class ToolInterfaces \{\
        +executeTool(toolName: string, params: Map<string, Object>): Object\
        +listAvailableTools(): List<string>\
        -registeredTools: Map<string, Tool>\
        -toolRegistry: ToolRegistry\
    \}\
    \
    class CustomLogicEngine \{\
        +executeCustomLogic(script: string, params: Map<string, Object>): Object\
        +validateScript(script: string): boolean\
        -scriptEngine: ScriptEngine\
        -sandboxEnvironment: Sandbox\
    \}\
\}\
\
' Relationships\
VoiceInterface --> SpeechToTextConverter\
VoiceInterface --> TextToSpeechConverter\
SpeechToTextConverter --> AIAgentController\
AIAgentController --> PlanningModule\
AIAgentController --> RAGRetrievalModule  \
AIAgentController --> WorkflowGenerator\
AIAgentController --> ResponseGenerator\
PlanningModule --> RAGRetrievalModule\
PlanningModule --> WorkflowGenerator\
RAGRetrievalModule --> RAGService\
WorkflowGenerator --> WorkflowExecutor\
WorkflowExecutor --> ToolInterfaces\
WorkflowExecutor --> CustomLogicEngine\
ResponseGenerator --> TextToSpeechConverter\
\
@enduml}